/**
 * @fileoverview Firestore Security Rules for the Design Portfolio application.
 *
 * Core Philosophy:
 * This ruleset prioritizes ease of prototyping and grants full read/write
 * access to all authenticated users. This is NOT intended for production use.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile data. The document ID is the Firebase Auth UID.
 * - /projects/{projectId}: Stores design portfolio projects.
 *
 * Key Security Decisions:
 * - All authenticated users have full access to all data.
 * - This is a temporary, insecure configuration for rapid prototyping only.
 *
 * Denormalization for Authorization:
 * Not applicable in this prototyping ruleset as all authenticated users have full access.
 *
 * Structural Segregation:
 * Not applicable as all data is treated equally accessible.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants all authenticated users full access to user profiles.
     * @path /users/{userId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Allows any authenticated user to read/write any user profile for prototyping purposes.
     */
    match /users/{userId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants all authenticated users full access to all projects.
     * @path /projects/{projectId}
     * @allow (create, update, delete, get, list) - Any authenticated user can perform any operation.
     * @deny (none) - No operation is denied.
     * @principle Allows any authenticated user to read/write any project for prototyping purposes.
     */
    match /projects/{projectId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}